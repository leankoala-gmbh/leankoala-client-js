var D=Object.create;var v=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var G=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var d=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports);var $=(i,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of B(e))!q.call(i,n)&&n!==t&&v(i,n,{get:()=>e[n],enumerable:!(s=W(e,n))||s.enumerable});return i};var J=(i,e,t)=>(t=i!=null?D(G(i)):{},$(e||!i||!i.__esModule?v(t,"default",{value:i,enumerable:!0}):t,i));var x=d((Q,b)=>{var N="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function f(i){this.message=i}f.prototype=new Error;f.prototype.name="InvalidCharacterError";function F(i){var e=String(i).replace(/=+$/,"");if(e.length%4==1)throw new f("'atob' failed: The string to be decoded is not correctly encoded.");for(var t=0,s,n,o=0,r="";n=e.charAt(o++);~n&&(s=t%4?s*64+n:n,t++%4)?r+=String.fromCharCode(255&s>>(-2*t&6)):0)n=N.indexOf(n);return r}b.exports=typeof window<"u"&&window.atob&&window.atob.bind(window)||F});var S=d((X,U)=>{var A=x();function z(i){return decodeURIComponent(A(i).replace(/(.)/g,function(e,t){var s=t.charCodeAt(0).toString(16).toUpperCase();return s.length<2&&(s="0"+s),"%"+s}))}U.exports=function(i){var e=i.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw"Illegal base64url string!"}try{return z(e)}catch{return A(e)}}});var E=d((Y,y)=>{"use strict";var H=S();function u(i){this.message=i}u.prototype=new Error;u.prototype.name="InvalidTokenError";y.exports=function(i,e){if(typeof i!="string")throw new u("Invalid token specified");e=e||{};var t=e.header===!0?0:1;try{return JSON.parse(H(i.split(".")[t]))}catch(s){throw new u("Invalid token specified: "+s.message)}};y.exports.InvalidTokenError=u});var T=J(E());var C=class extends Error{url;data;identifier;constructor(e){super(e.message),this.url=e.url,this.data=e.data,e.identifier&&(this.identifier=e.identifier)}},P=C;var g=class extends Error{},L=g;var k=class extends Error{},M=k;var w=class{_refreshRoute;_accessToken;_refreshToken;_user={};_accessExpireTimestamp;_refreshExpireTimestamp;_apiServer;_preferredLanguage;_axios;_axiosAdapter;_defaultParameters={};_registeredEventListeners;_routes;_connectionArgs;constructor(e,t){this._refreshRoute={version:1,path:"auth/tokens/refresh/{user_id}",method:"POST"},this._accessToken="",this._refreshToken="",this._user={},this._accessExpireTimestamp=0,this._refreshExpireTimestamp=0,this._apiServer=e,this._preferredLanguage="en",this._axios=t,this._axiosAdapter=!1,this._defaultParameters={},this._registeredEventListeners={},this._routes={authenticateByPassword:{version:1,path:"auth/tokens/access",method:"POST"},authenticateByToken:{version:1,path:"auth/tokens/token/{masterUserId}",method:"POST"}}}async connect(e){let t={};if(this._connectionArgs=Object.assign(t,e),e.language&&this.setLanguage(e.language),e.axiosAdapter&&(this._axiosAdapter=e.axiosAdapter),e.refreshToken){if(!e.userId)throw new Error("When connecting via refresh token the userId is also mandatory.");this._user={id:e.userId},this._refreshToken=e.refreshToken,this._accessExpireTimestamp=0,await this.refreshAccessToken(!0,e.withMemories)}else if(e.accessToken)this.setAccessToken(e.accessToken,e.refreshToken),this._accessExpireTimestamp=Date.now()/1e3+60;else if(e.wakeUpToken)await this._connectByWakeUpToken(e);else{let s=!1;if(!this._connectionArgs.loginToken){if(!this._connectionArgs.username)throw new Error("Mandatory username is missing");if(!this._connectionArgs.password)throw new Error("Mandatory password is missing")}this._connectionArgs.withMemories&&(s=this._connectionArgs.withMemories),await this._authenticate({username:e.username,password:e.password,withMemories:s,loginToken:e.loginToken})}}async _connectByWakeUpToken(e){if(!e.wakeUpToken)return;let t=JSON.parse(e.wakeUpToken);this._refreshToken=t.refreshToken,this._user=t.user,this._refreshExpireTimestamp=t.expireDate,this._accessExpireTimestamp=0,this.setLanguage(e.preferred_language),await this.refreshAccessToken(!0,e.withMemories)}getAccessToken(){return this._accessToken}getExpireDate(){return this._refreshExpireTimestamp}getWakeUpToken(){return{refreshToken:this._refreshToken,user:this.getUser(),expireDate:this.getExpireDate(),apiServer:this._apiServer}}getUser(){return this._user}_getUrl(e,t){let s=e.path,n=e.version,o=this._apiServer;if(!o)throw new Error("Unable to create the url. ApiServer parameter is missing.");let r=`${o}v${n}/${s}`,_=r.match(/{(.*?)}/gi);return _!==null&&_.forEach(function(l){let a=l.replace("{","").replace("}","");if(t[a])r=r.replace(l,t[a]);else throw new Error("The mandatory parameter "+a+" is missing in the arguments object.")}),r.replace(/(https?:\/\/)|(\/)+/g,"$1$2")}async send(e,t,s=!1){let n={"accept-language":this._preferredLanguage};s||(await this.refreshAccessToken(),n.Authorization=`Bearer ${this._accessToken}`);let r={...Object.assign({},this._defaultParameters),...t},_=e.method.toUpperCase(),l=this._getUrl(e,r),a;try{let h={method:_,url:l,data:r,headers:n,adapter:this._axiosAdapter};this._publish("send",h),a=await this._axios(h)}catch(h){if(h.response)a=h.response;else throw this._publish("error",h),h}return this._publish("response",a),this._assertValidResponse(a,l,t),a.data.data}setLanguage(e){this._preferredLanguage=e}addDefaultParameter(e,t){this._defaultParameters[e]=t}_assertValidResponse(e,t,s){let n=e.data;if(n.status!=="success"){let o={message:n.message,url:t,data:s};throw n.identifier&&(o.identifier=n.identifier),this._publish("failure",o),e.status===403?new L(n.message):new P(o)}}async _authenticate(e){let t;if(e.username)t=await this.send(this._routes.authenticateByPassword,{username:e.username,password:e.password,with_memories:e.withMemories,withMemories:e.withMemories},!0);else if(e.loginToken)t=await this.send(this._routes.authenticateByToken,{access_token:e.loginToken,with_memories:e.withMemories,withMemories:e.withMemories},!0);else throw new Error("User name or login token is not set. At least one of them must be set..");this.setAccessToken(t.token,t.refresh_token),this._user=t.user,this._user.memories=t.memories,this._refreshTokenExpireDate(!0)}_refreshTokenExpireDate(e=!1){let t=(0,T.default)(this._accessToken);if(this._accessExpireTimestamp=Math.floor(Date.now()/1e3)+t.ttl,e){let s=(0,T.default)(this._refreshToken);this._refreshExpireTimestamp=Math.floor(Date.now()/1e3)+s.ttl}}setAccessToken(e,t){this._accessToken=e;let s=!1;t&&(this._refreshToken=t,s=!0),this.addDefaultParameter("access_token",e),this._refreshTokenExpireDate(s)}async refreshAccessToken(e=!1,t=!1){if(e||Math.floor(Date.now()/1e3)+10>this._accessExpireTimestamp){let s=this.getUser(),n={};try{n=await this.send(this._refreshRoute,{user_id:s.id,user:s.id,access_token:this._refreshToken,with_memories:t,withMemories:t,application:"koality"},!0),n.user&&(this._user=n.user)}catch(o){throw this._publish("refresh.invalid",{message:o.message}),new M(o.message)}n.memories&&(this._user.memories=n.memories),this.setAccessToken(n.token,this._refreshToken)}}setUser(e){this._user=e}setRefreshRoute(e){this._refreshRoute=e}on(e,t){e in this._registeredEventListeners||(this._registeredEventListeners[e]=[]),this._registeredEventListeners[e].push(t)}_publish(e,t){e in this._registeredEventListeners&&this._registeredEventListeners[e].forEach(s=>{s(t)})}},c=w;var p=class{_connectionType;_connection;constructor(){this._connectionType="MasterConnection"}s;_assertValidArguments(e,t){e.forEach(function(s){if(!(s in t))throw new Error(`The mandatory argument ${s} could not be found in the argument object.`)})}setConnection(e){this._connection=e}getConnectionType(){return this._connectionType}};var R=class extends p{constructor(){super(),this._connectionType="ClusterConnection"}async getCompanySubscription(e,t={}){let s={path:"subscription/company/{company}/",method:"GET",version:1},n=Object.assign({company:e},t);return this._connection.send(s,n)}async setCompanyCreditCardPlans(e,t){let s={path:"subscription/company/{company}/plans/creditcard",method:"POST",version:1},n=Object.assign({company:e},t),o=["quantity"];return this._assertValidArguments(o,n),this._connection.send(s,n)}async setCompanyFreePlans(e,t){let s={path:"subscription/company/{company}/plans/free",method:"POST",version:1},n=Object.assign({company:e},t),o=["quantity"];return this._assertValidArguments(o,n),this._connection.send(s,n)}async setCreditCard(e,t){let s={path:"subscription/company/{company}/creditcard",method:"POST",version:1},n=Object.assign({company:e},t),o=["stripe_cc_source","last_digits","brand"];return this._assertValidArguments(o,n),this._connection.send(s,n)}async setBillingAddress(e,t){let s={path:"subscription/company/{company}/billingaddress",method:"POST",version:1},n=Object.assign({company:e},t),o=["company_name","country","postal_code","city","street"];return this._assertValidArguments(o,n),this._connection.send(s,n)}async getBillingAddress(e,t={}){let s={path:"subscription/company/{company}/billingaddress",method:"GET",version:1},n=Object.assign({company:e},t);return this._connection.send(s,n)}async getSubscribedFeatures(e,t={}){let s={path:"subscription/company/{company}/features",method:"GET",version:1},n=Object.assign({company:e},t);return this._connection.send(s,n)}async getCompanyInvoices(e,t={}){let s={path:"subscription/company/{company}/invoices",method:"GET",version:1},n=Object.assign({company:e},t);return this._connection.send(s,n)}async endTrials(e,t={}){let s={path:"subscription/trial/{providerIdentifier}/end",method:"POST",version:1},n=Object.assign({providerIdentifier:e},t);return this._connection.send(s,n)}},O=R;var I=class extends p{constructor(){super(),this._connectionType="ClusterConnection"}async getRooms(e={}){let t={path:"websockets/rooms",method:"POST",version:1},s=Object.assign({},e);return this._connection.send(t,s)}},j=I;var m=class{_repositories;_masterConnection;_clusterConnection;constructor(){this._masterConnection=!1,this._clusterConnection=!1,this._repositories={},this._repositories.subscription=new O,this._repositories.websocket=new j}setClusterConnection(e){this._clusterConnection=e}setMasterConnection(e){this._masterConnection=e}getRepository(e){let t=e.toLowerCase();if(t in this._repositories){let s=this._repositories[t];return s.getConnectionType()==="ClusterConnection"?s.setConnection(this._clusterConnection):s.setConnection(this._masterConnection),this._repositories[t]}else throw new Error(`No repository with name ${t} found. Registered repositories are:
         ${JSON.stringify(Object.keys(this._repositories))}
        `)}};var V=class{_clusterConnection;_masterConnection;_user;_companies;_currentCompany;_axios;_environment;_connectionStatus;_registeredEventListeners;_masterToken;_routes;_repositoryCollection={};_masterUser;_refreshToken;constructor(e="production"){this._clusterConnection=!1,this._masterConnection=!1,this._user={},this._companies={},this._currentCompany=!1,this._axios=!1,this._environment=e,this._connectionStatus="disconnected",this._registeredEventListeners={},this._masterToken="",this._routes={masterRefresh:{version:1,path:"{application}/auth/refresh/{user}",method:"POST"},clusterRefresh:{version:1,path:"auth/tokens/refresh/{user_id}",method:"POST"}}}async connect(e){e.autoSelectCompany=e.autoSelectCompany||!1,this._connectionStatus="connecting";try{this._repositoryCollection=new m,await this._initConnection(e)}catch(t){throw this._connectionStatus="disconnected",t}this._connectionStatus="connected"}isConnected(){return this._masterConnection?Math.floor(Date.now()/1e3)<this._masterConnection.getExpireDate():!1}setLanguage(e){this._masterConnection.setLanguage(e),this._clusterConnection&&this._clusterConnection.setLanguage(e)}getWakeUpToken(){let e={master:this._masterConnection.getWakeUpToken(),company:this._currentCompany,user:this.getUser(),cluster:this._clusterConnection?this._clusterConnection.getWakeUpToken():null};return JSON.stringify(e)}async _initConnection(e){"noLogin"in e?(this._masterConnection=new c(this._getMasterServer(),e.axios),this._repositoryCollection.setMasterConnection(this._masterConnection)):"wakeUpToken"in e?await this._initConnectionViaWakeUpToken(e):"accessToken"in e&&e.accessToken?await this._initConnectionViaMasterTokens(e):"refreshToken"in e?await this._initConnectionViaRefreshToken(e):await this._initConnectionViaCredentials(e),this._registerConnectionListeners()}async _initConnectionViaWakeUpToken(e){if(!("wakeUpToken"in e))throw new Error("WakeUp Token is missing");let t=JSON.parse(e.wakeUpToken);this._masterUser=t.user,this._currentCompany=t.company,this._masterConnection=new c(this._getMasterServer(),e.axios);let s=e,n=t.master;n.user.id=this._masterUser.masterId,s.wakeUpToken=JSON.stringify(n),this._masterConnection.setRefreshRoute(this._routes.masterRefresh),await this._masterConnection.connect(s),this._repositoryCollection.setMasterConnection(this._masterConnection);let o=this._masterConnection.getUser();if(this._masterUser.preferredLanguage=o.preferredLanguage,t.company){this._clusterConnection=new c(t.company.cluster.apiEndpoint,e.axios),this._clusterConnection.setRefreshRoute(this._routes.clusterRefresh);let r=e;r.wakeUpToken=JSON.stringify(t.cluster),await this._clusterConnection.connect(r),this._repositoryCollection.setClusterConnection(this._clusterConnection)}}async _initConnectionViaCredentials(e){let t=this._getMasterServer();this._masterConnection=new c(t,this._axios);let s={version:1,path:"{application}/auth/login",method:"POST"},n=Boolean(e.withMemories||!1),o=await this._masterConnection.send(s,{emailOrUserName:e.username,password:e.password,application:"koality",withMemories:n},!0);this._masterToken=o.token,this._refreshToken=o.refreshToken,this._masterUser=o.user,this._masterConnection.setUser(o.user),this._masterUser.masterId=o.user.id,o.memories&&(this._masterUser.memories=o.memories),this._companies=o.companies,this._masterConnection.setAccessToken(this._masterToken,this._refreshToken),this._repositoryCollection.setMasterConnection(this._masterConnection),e.autoSelectCompany&&await this._autoSelectCompany()}async _initConnectionViaRefreshToken(e){this._masterConnection=new c(this._getMasterServer(),e.axios),this._masterConnection.setRefreshRoute(this._routes.masterRefresh),await this._masterConnection.connect(e),this._masterUser=this._masterConnection.getUser(),this._masterUser.masterId=this._masterUser.id,this._masterToken=this._masterConnection.getAccessToken(),this._companies=this._masterUser.companies,this._repositoryCollection.setMasterConnection(this._masterConnection),e.autoSelectCompany&&await this._autoSelectCompany()}async _initConnectionViaMasterTokens(e){this._masterConnection=new c(this._getMasterServer(),e.axios),this._masterConnection.setAccessToken(e.accessToken,e.refreshToken),this._masterToken=e.accessToken,"user"in e&&(this._masterConnection.setUser(e.user),this._user=e.user,this._user.masterId=e.user.id,this._masterUser=e.user,this._companies=e.user.companies),this._repositoryCollection.setMasterConnection(this._masterConnection),e.autoSelectCompany&&await this._autoSelectCompany()}async _autoSelectCompany(){if(this._companies.length===0)throw new Error("Unable to auto select the company. User is not connected to any.");let e=this._companies[0];await this.switchCompany(e.id)}async switchCompany(e){let t=this,s;if(this._companies.forEach(function(n){n.id===e&&(s=n)}),s)await t._switchCluster(s.cluster),this._currentCompany=s;else throw new Error("Unable to select the company. Company id not connected to user.")}async _switchCluster(e){this._clusterConnection=new c(e.apiEndpoint,this._axios),this._repositoryCollection.setClusterConnection(this._clusterConnection),this._clusterConnection.addDefaultParameter("masterUserId",this._masterUser.id),await this._clusterConnection.connect({loginToken:this._masterToken});let t=this._clusterConnection.getUser();this._masterUser.clusterId=t.id,this._masterUser.id=t.id}_getMasterServer(){switch(this._environment){case"local":return"http://localhost:8082/";case"stage":return"https://auth.stage.koalityengine.com/";case"production":return"https://auth.koalityengine.com/";default:throw new Error('The given environment "'+this._environment+'" is unknown.')}}_registerConnectionListeners(){let e=this._masterConnection,t=this._clusterConnection,s=this._registeredEventListeners;Object.keys(s).forEach(n=>{s[n].forEach(o=>{e.on(n,o),t&&t.on(n,o)})})}async getRepository(e){if(this._connectionStatus==="disconnected")throw new Error("Please connect the client before running this method.");if(this._connectionStatus==="connected")return this._repositoryCollection.getRepository(e);if(this._connectionStatus==="connecting"){for(;this._connectionStatus==="connecting";)await this._sleep(300);return this.getRepository(e)}return{}}async _sleep(e){return new Promise(t=>setTimeout(t,e))}getUser(){if(!this._masterUser)throw new Error("No user found. Please run connect() to login in.");return this._masterUser}getCompany(){return this._currentCompany}on(e,t){e in this._registeredEventListeners||(this._registeredEventListeners[e]=[]),this._registeredEventListeners[e].push(t),this._masterConnection&&this._masterConnection.on(e,t),this._clusterConnection&&this._clusterConnection.on(e,t)}async fetchAll(e){let t=[],s={},n=0;Object.keys(e).forEach(r=>t.push(e[r]));let o=await Promise.allSettled(t);return Object.keys(e).forEach(r=>{s[r]=o[n].value,n++}),s}isWakeUpTokenExpired(e){let{master:t,cluster:s}=JSON.parse(e),n=Math.floor(new Date().getTime()/1e3);return!s||s.expireDate<n||!t||t.expireDate<n}setRefreshToken(e){this._refreshToken=e}};export{V as LeankoalaClient};
